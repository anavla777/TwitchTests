plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
    id "io.freefair.lombok" version "8.6"
}

repositories {
    mavenCentral()
}
def selenideVersion = "7.3.3",
    restAssuredVersion="5.5.0",
    allureVersion = "2.27.0",
    junitVersion = "5.10.2",
    slf4jVersion = "2.0.13",
    commonsVersion = "2.11.0"

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjVersion.set("1.9.22.1")
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}
dependencies {
    testImplementation (
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            'io.qameta.allure:allure-rest-assured:2.27.0',
            'io.rest-assured:json-schema-validator:5.4.0',
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            'org.aeonbits.owner:owner:1.0.12',
            'org.assertj:assertj-core:3.26.0',
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "commons-io:commons-io:$commonsVersion",
    )
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

tasks.register('twitchUITests', Test) {
    useJUnitPlatform {
        includeTags("UI")
    }
}

tasks.register('twitchAPITests', Test) {
    useJUnitPlatform {
        includeTags("API")
    }
}
tasks.register('twitchAllTests', Test) {
    useJUnitPlatform {
        includeTags("UI", "API")
    }
}
    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
    }
